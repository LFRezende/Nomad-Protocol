{
  "address": "0xf4147bc3A1b7491e5588711918Be97E586169736",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "addSource",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_text",
          "type": "string"
        }
      ],
      "name": "addText",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "addressToSourceName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "creditedSources",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        }
      ],
      "name": "hashAddress",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_text",
          "type": "string"
        }
      ],
      "name": "hashText",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "hashToSource",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "idToIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_text",
          "type": "string"
        }
      ],
      "name": "isFake",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x6847074d371af37b8ccac267759b67636fb8ca1a9ec8f845e794e89d48a5e247",
  "receipt": {
    "to": null,
    "from": "0x0d251642A1B8D29554d43f3F1749717B0Ca5Ab84",
    "contractAddress": "0xf4147bc3A1b7491e5588711918Be97E586169736",
    "transactionIndex": 25,
    "gasUsed": "883140",
    "logsBloom": "0x
    "blockHash": "0x54f92fa7b6d3010cbf288d6e7b15738837d3342796195cb6678e2ccba81d3c51",
    "transactionHash": "0x6847074d371af37b8ccac267759b67636fb8ca1a9ec8f845e794e89d48a5e247",
    "logs": [],
    "blockNumber": 9122713,
    "cumulativeGasUsed": "4294211",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "3a448b24f0d4d93b4271c6c3f545f41a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"addSource\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_text\",\"type\":\"string\"}],\"name\":\"addText\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"addressToSourceName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"creditedSources\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"hashAddress\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_text\",\"type\":\"string\"}],\"name\":\"hashText\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"hashToSource\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"idToIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_text\",\"type\":\"string\"}],\"name\":\"isFake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MakersApp.sol\":\"MakersApp\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MakersApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract MakersApp {\\n    // Initial settings\\n    bytes32[] public creditedSources;\\n    mapping(bytes32 => string) public addressToSourceName;\\n    mapping(bytes32 => uint256) public idToIndex;\\n    mapping(bytes32 => bytes32) public hashToSource;\\n    address owner;\\n\\n    modifier isOwner() {\\n        require(\\n            msg.sender == owner,\\n            \\\"You are not the administrator - Not allowed to do this.\\\"\\n        );\\n        _;\\n    }\\n    modifier isSource() {\\n        require(idToIndex[hashAddress(msg.sender)] > 0, \\\"Not a Source!\\\");\\n        _;\\n    }\\n\\n    // Assuring the correct ownability\\n    constructor() {\\n        owner = msg.sender;\\n        // Filling the 0th index of the list, for mapping purposes, with a dummy Id.\\n        creditedSources.push(\\n            0x0000000000000000000000000000000000000000000000000000000000000000\\n        ); // Dummy Id\\n    }\\n\\n    // The hashing could be done outside of the blockchain, 4real\\n    function hashText(string memory _text) public pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(_text));\\n    }\\n\\n    function hashAddress(address _wallet) public pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(_wallet));\\n    }\\n\\n    // The Owner of the contract can append sources allowed to add data\\n    function addSource(string memory _name) public isOwner {\\n        bytes32 sourceId = hashAddress(msg.sender);\\n        addressToSourceName[sourceId] = _name;\\n        creditedSources.push(sourceId);\\n        idToIndex[sourceId] = creditedSources.length;\\n    }\\n\\n    // Only credited Sources are allowed to append information to the chain\\n    function addText(string memory _text) public isSource {\\n        bytes32 hashedText = hashText(_text);\\n        hashToSource[hashedText] = hashAddress(msg.sender); // Weird, but still operational...\\n    }\\n\\n    // If the text has been appended by some truthful source, the hash was mapped before.\\n    function isFake(string memory _text) public view returns (bool) {\\n        if (hashToSource[hashText(_text)] > 0) return true;\\n        return false;\\n    }\\n\\n    // Note to sELF: Gotta stop using the wallet as a private key\\n}\\n\",\"keccak256\":\"0x655a5edfb5f5d076bdf8b10d588f4c0ed6f5f2d46fd03e6eaee962292eaa9f1c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000808060018154018082558091505060019003906000526020600020016000909160001b909190915055610e2d8061008c6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063af7113dc11610066578063af7113dc14610144578063c3269c9d14610174578063dbdd3531146101a4578063ed62d2ff146101d4578063ee823db1146101f057610093565b80631d2220b8146100985780633aa5fe59146100c8578063469c0361146100f85780639296dc0414610128575b600080fd5b6100b260048036038101906100ad91906106a0565b610220565b6040516100bf9190610702565b60405180910390f35b6100e260048036038101906100dd919061077b565b610250565b6040516100ef9190610702565b60405180910390f35b610112600480360381019061010d91906107d4565b610280565b60405161011f919061081a565b60405180910390f35b610142600480360381019061013d91906106a0565b610298565b005b61015e60048036038101906101599190610861565b610327565b60405161016b9190610702565b60405180910390f35b61018e600480360381019061018991906107d4565b61034b565b60405161019b919061090d565b60405180910390f35b6101be60048036038101906101b991906107d4565b6103eb565b6040516101cb9190610702565b60405180910390f35b6101ee60048036038101906101e991906106a0565b610403565b005b61020a600480360381019061020591906106a0565b61050b565b604051610217919061094a565b60405180910390f35b60008160405160200161023391906109a1565b604051602081830303815290604052805190602001209050919050565b6000816040516020016102639190610a00565b604051602081830303815290604052805190602001209050919050565b60026020528060005260406000206000915090505481565b6000600260006102a733610250565b815260200190815260200160002054116102f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ed90610a67565b60405180910390fd5b600061030182610220565b905061030c33610250565b60036000838152602001908152602001600020819055505050565b6000818154811061033757600080fd5b906000526020600020016000915090505481565b6001602052806000526040600020600091509050805461036a90610ab6565b80601f016020809104026020016040519081016040528092919081815260200182805461039690610ab6565b80156103e35780601f106103b8576101008083540402835291602001916103e3565b820191906000526020600020905b8154815290600101906020018083116103c657829003601f168201915b505050505081565b60036020528060005260406000206000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610493576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048a90610b59565b60405180910390fd5b600061049e33610250565b9050816001600083815260200190815260200160002090816104c09190610d25565b50600081908060018154018082558091505060019003906000526020600020016000909190919091505560008054905060026000838152602001908152602001600020819055505050565b60008060001b6003600061051e85610220565b815260200190815260200160002054111561053c5760019050610541565b600090505b919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105ad82610564565b810181811067ffffffffffffffff821117156105cc576105cb610575565b5b80604052505050565b60006105df610546565b90506105eb82826105a4565b919050565b600067ffffffffffffffff82111561060b5761060a610575565b5b61061482610564565b9050602081019050919050565b82818337600083830152505050565b600061064361063e846105f0565b6105d5565b90508281526020810184848401111561065f5761065e61055f565b5b61066a848285610621565b509392505050565b600082601f8301126106875761068661055a565b5b8135610697848260208601610630565b91505092915050565b6000602082840312156106b6576106b5610550565b5b600082013567ffffffffffffffff8111156106d4576106d3610555565b5b6106e084828501610672565b91505092915050565b6000819050919050565b6106fc816106e9565b82525050565b600060208201905061071760008301846106f3565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107488261071d565b9050919050565b6107588161073d565b811461076357600080fd5b50565b6000813590506107758161074f565b92915050565b60006020828403121561079157610790610550565b5b600061079f84828501610766565b91505092915050565b6107b1816106e9565b81146107bc57600080fd5b50565b6000813590506107ce816107a8565b92915050565b6000602082840312156107ea576107e9610550565b5b60006107f8848285016107bf565b91505092915050565b6000819050919050565b61081481610801565b82525050565b600060208201905061082f600083018461080b565b92915050565b61083e81610801565b811461084957600080fd5b50565b60008135905061085b81610835565b92915050565b60006020828403121561087757610876610550565b5b60006108858482850161084c565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156108c85780820151818401526020810190506108ad565b60008484015250505050565b60006108df8261088e565b6108e98185610899565b93506108f98185602086016108aa565b61090281610564565b840191505092915050565b6000602082019050818103600083015261092781846108d4565b905092915050565b60008115159050919050565b6109448161092f565b82525050565b600060208201905061095f600083018461093b565b92915050565b600081905092915050565b600061097b8261088e565b6109858185610965565b93506109958185602086016108aa565b80840191505092915050565b60006109ad8284610970565b915081905092915050565b60008160601b9050919050565b60006109d0826109b8565b9050919050565b60006109e2826109c5565b9050919050565b6109fa6109f58261073d565b6109d7565b82525050565b6000610a0c82846109e9565b60148201915081905092915050565b7f4e6f74206120536f757263652100000000000000000000000000000000000000600082015250565b6000610a51600d83610899565b9150610a5c82610a1b565b602082019050919050565b60006020820190508181036000830152610a8081610a44565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610ace57607f821691505b602082108103610ae157610ae0610a87565b5b50919050565b7f596f7520617265206e6f74207468652061646d696e6973747261746f72202d2060008201527f4e6f7420616c6c6f77656420746f20646f20746869732e000000000000000000602082015250565b6000610b43603783610899565b9150610b4e82610ae7565b604082019050919050565b60006020820190508181036000830152610b7281610b36565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610bdb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610b9e565b610be58683610b9e565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610c22610c1d610c1884610801565b610bfd565b610801565b9050919050565b6000819050919050565b610c3c83610c07565b610c50610c4882610c29565b848454610bab565b825550505050565b600090565b610c65610c58565b610c70818484610c33565b505050565b5b81811015610c9457610c89600082610c5d565b600181019050610c76565b5050565b601f821115610cd957610caa81610b79565b610cb384610b8e565b81016020851015610cc2578190505b610cd6610cce85610b8e565b830182610c75565b50505b505050565b600082821c905092915050565b6000610cfc60001984600802610cde565b1980831691505092915050565b6000610d158383610ceb565b9150826002028217905092915050565b610d2e8261088e565b67ffffffffffffffff811115610d4757610d46610575565b5b610d518254610ab6565b610d5c828285610c98565b600060209050601f831160018114610d8f5760008415610d7d578287015190505b610d878582610d09565b865550610def565b601f198416610d9d86610b79565b60005b82811015610dc557848901518255600182019150602085019450602081019050610da0565b86831015610de25784890151610dde601f891682610ceb565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220469321585bc8b0d1781d1bfc0f7cd50de841d37136558559cfe233bbb9d2e8d464736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c8063af7113dc11610066578063af7113dc14610144578063c3269c9d14610174578063dbdd3531146101a4578063ed62d2ff146101d4578063ee823db1146101f057610093565b80631d2220b8146100985780633aa5fe59146100c8578063469c0361146100f85780639296dc0414610128575b600080fd5b6100b260048036038101906100ad91906106a0565b610220565b6040516100bf9190610702565b60405180910390f35b6100e260048036038101906100dd919061077b565b610250565b6040516100ef9190610702565b60405180910390f35b610112600480360381019061010d91906107d4565b610280565b60405161011f919061081a565b60405180910390f35b610142600480360381019061013d91906106a0565b610298565b005b61015e60048036038101906101599190610861565b610327565b60405161016b9190610702565b60405180910390f35b61018e600480360381019061018991906107d4565b61034b565b60405161019b919061090d565b60405180910390f35b6101be60048036038101906101b991906107d4565b6103eb565b6040516101cb9190610702565b60405180910390f35b6101ee60048036038101906101e991906106a0565b610403565b005b61020a600480360381019061020591906106a0565b61050b565b604051610217919061094a565b60405180910390f35b60008160405160200161023391906109a1565b604051602081830303815290604052805190602001209050919050565b6000816040516020016102639190610a00565b604051602081830303815290604052805190602001209050919050565b60026020528060005260406000206000915090505481565b6000600260006102a733610250565b815260200190815260200160002054116102f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ed90610a67565b60405180910390fd5b600061030182610220565b905061030c33610250565b60036000838152602001908152602001600020819055505050565b6000818154811061033757600080fd5b906000526020600020016000915090505481565b6001602052806000526040600020600091509050805461036a90610ab6565b80601f016020809104026020016040519081016040528092919081815260200182805461039690610ab6565b80156103e35780601f106103b8576101008083540402835291602001916103e3565b820191906000526020600020905b8154815290600101906020018083116103c657829003601f168201915b505050505081565b60036020528060005260406000206000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610493576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048a90610b59565b60405180910390fd5b600061049e33610250565b9050816001600083815260200190815260200160002090816104c09190610d25565b50600081908060018154018082558091505060019003906000526020600020016000909190919091505560008054905060026000838152602001908152602001600020819055505050565b60008060001b6003600061051e85610220565b815260200190815260200160002054111561053c5760019050610541565b600090505b919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105ad82610564565b810181811067ffffffffffffffff821117156105cc576105cb610575565b5b80604052505050565b60006105df610546565b90506105eb82826105a4565b919050565b600067ffffffffffffffff82111561060b5761060a610575565b5b61061482610564565b9050602081019050919050565b82818337600083830152505050565b600061064361063e846105f0565b6105d5565b90508281526020810184848401111561065f5761065e61055f565b5b61066a848285610621565b509392505050565b600082601f8301126106875761068661055a565b5b8135610697848260208601610630565b91505092915050565b6000602082840312156106b6576106b5610550565b5b600082013567ffffffffffffffff8111156106d4576106d3610555565b5b6106e084828501610672565b91505092915050565b6000819050919050565b6106fc816106e9565b82525050565b600060208201905061071760008301846106f3565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107488261071d565b9050919050565b6107588161073d565b811461076357600080fd5b50565b6000813590506107758161074f565b92915050565b60006020828403121561079157610790610550565b5b600061079f84828501610766565b91505092915050565b6107b1816106e9565b81146107bc57600080fd5b50565b6000813590506107ce816107a8565b92915050565b6000602082840312156107ea576107e9610550565b5b60006107f8848285016107bf565b91505092915050565b6000819050919050565b61081481610801565b82525050565b600060208201905061082f600083018461080b565b92915050565b61083e81610801565b811461084957600080fd5b50565b60008135905061085b81610835565b92915050565b60006020828403121561087757610876610550565b5b60006108858482850161084c565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156108c85780820151818401526020810190506108ad565b60008484015250505050565b60006108df8261088e565b6108e98185610899565b93506108f98185602086016108aa565b61090281610564565b840191505092915050565b6000602082019050818103600083015261092781846108d4565b905092915050565b60008115159050919050565b6109448161092f565b82525050565b600060208201905061095f600083018461093b565b92915050565b600081905092915050565b600061097b8261088e565b6109858185610965565b93506109958185602086016108aa565b80840191505092915050565b60006109ad8284610970565b915081905092915050565b60008160601b9050919050565b60006109d0826109b8565b9050919050565b60006109e2826109c5565b9050919050565b6109fa6109f58261073d565b6109d7565b82525050565b6000610a0c82846109e9565b60148201915081905092915050565b7f4e6f74206120536f757263652100000000000000000000000000000000000000600082015250565b6000610a51600d83610899565b9150610a5c82610a1b565b602082019050919050565b60006020820190508181036000830152610a8081610a44565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610ace57607f821691505b602082108103610ae157610ae0610a87565b5b50919050565b7f596f7520617265206e6f74207468652061646d696e6973747261746f72202d2060008201527f4e6f7420616c6c6f77656420746f20646f20746869732e000000000000000000602082015250565b6000610b43603783610899565b9150610b4e82610ae7565b604082019050919050565b60006020820190508181036000830152610b7281610b36565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610bdb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610b9e565b610be58683610b9e565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610c22610c1d610c1884610801565b610bfd565b610801565b9050919050565b6000819050919050565b610c3c83610c07565b610c50610c4882610c29565b848454610bab565b825550505050565b600090565b610c65610c58565b610c70818484610c33565b505050565b5b81811015610c9457610c89600082610c5d565b600181019050610c76565b5050565b601f821115610cd957610caa81610b79565b610cb384610b8e565b81016020851015610cc2578190505b610cd6610cce85610b8e565b830182610c75565b50505b505050565b600082821c905092915050565b6000610cfc60001984600802610cde565b1980831691505092915050565b6000610d158383610ceb565b9150826002028217905092915050565b610d2e8261088e565b67ffffffffffffffff811115610d4757610d46610575565b5b610d518254610ab6565b610d5c828285610c98565b600060209050601f831160018114610d8f5760008415610d7d578287015190505b610d878582610d09565b865550610def565b601f198416610d9d86610b79565b60005b82811015610dc557848901518255600182019150602085019450602081019050610da0565b86831015610de25784890151610dde601f891682610ceb565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220469321585bc8b0d1781d1bfc0f7cd50de841d37136558559cfe233bbb9d2e8d464736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4,
        "contract": "contracts/MakersApp.sol:MakersApp",
        "label": "creditedSources",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "astId": 8,
        "contract": "contracts/MakersApp.sol:MakersApp",
        "label": "addressToSourceName",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_string_storage)"
      },
      {
        "astId": 12,
        "contract": "contracts/MakersApp.sol:MakersApp",
        "label": "idToIndex",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 16,
        "contract": "contracts/MakersApp.sol:MakersApp",
        "label": "hashToSource",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_bytes32,t_bytes32)"
      },
      {
        "astId": 18,
        "contract": "contracts/MakersApp.sol:MakersApp",
        "label": "owner",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_mapping(t_bytes32,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}